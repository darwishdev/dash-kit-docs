{
    "accordion": {
        "description": "Accordion groups a collection of contents in tabs.\n\n[Live Demo](https://www.primevue.org/accordion/)",
        "components": {
            "default": {
                "description": "Accordion groups a collection of contents in tabs.",
                "methods": {
                    "description": "Defines methods that can be accessed by the component's reference.",
                    "values": []
                }
            }
        },
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "typeDescription": "Defines the custom types used by the module.",
            "values": {
                "AccordionPassThroughMethodOptions": {
                    "description": "Custom passthrough(pt) option method.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "instance",
                            "optional": false,
                            "readonly": false,
                            "type": "any",
                            "default": ""
                        },
                        {
                            "name": "props",
                            "optional": false,
                            "readonly": false,
                            "type": "AccordionProps",
                            "default": ""
                        },
                        {
                            "name": "state",
                            "optional": false,
                            "readonly": false,
                            "type": "AccordionState",
                            "default": ""
                        }
                    ],
                    "methods": []
                },
                "AccordionTabOpenEvent": {
                    "description": "Custom tab open event.",
                    "relatedProp": "AccordionEmits.tab-open",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Opened tab index."
                        }
                    ],
                    "methods": [],
                    "extendedBy": "AccordionTabCloseEvent,AccordionClickEvent"
                },
                "AccordionTabCloseEvent": {
                    "description": "Custom tab close event.",
                    "relatedProp": "AccordionEmits.tab-close",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Opened tab index."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "AccordionTabOpenEvent"
                },
                "AccordionClickEvent": {
                    "description": "Custom tab open event.",
                    "relatedProp": "AccordionEmits.tab-open",
                    "props": [
                        {
                            "name": "originalEvent",
                            "optional": false,
                            "readonly": false,
                            "type": "MouseEvent",
                            "default": "",
                            "description": "Browser mouse event."
                        },
                        {
                            "name": "index",
                            "optional": false,
                            "readonly": false,
                            "type": "number",
                            "default": "",
                            "description": "Opened tab index."
                        }
                    ],
                    "methods": [],
                    "extendedTypes": "AccordionTabOpenEvent"
                },
                "AccordionPassThroughOptions": {
                    "description": "Custom passthrough(pt) options.",
                    "relatedProp": "AccordionProps.pt",
                    "props": [
                        {
                            "name": "root",
                            "optional": true,
                            "readonly": false,
                            "type": "AccordionPassThroughOptionType",
                            "default": "",
                            "description": "Uses to pass attributes to the root's DOM element."
                        },
                        {
                            "name": "tab",
                            "optional": true,
                            "readonly": false,
                            "type": "AccordionTabPassThroughOptionType",
                            "default": "",
                            "description": "Uses to pass attributes to AccordionTab helper components.",
                            "deprecated": "since v3.30.1. Use 'accordiontab' property instead."
                        },
                        {
                            "name": "accordiontab",
                            "optional": true,
                            "readonly": false,
                            "type": "AccordionTabPassThroughOptionType",
                            "default": "",
                            "description": "Uses to pass attributes to AccordionTab helper components."
                        },
                        {
                            "name": "hooks",
                            "optional": true,
                            "readonly": false,
                            "type": "ComponentHooks",
                            "default": "",
                            "description": "Uses to manage all lifecycle hooks"
                        }
                    ],
                    "methods": []
                },
                "AccordionPassThroughAttributes": {
                    "description": "Custom passthrough attributes for each DOM elements",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "[key: string]",
                            "optional": false,
                            "readonly": false,
                            "type": "any"
                        }
                    ],
                    "methods": []
                },
                "AccordionState": {
                    "description": "Defines current inline state in Accordion component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "id",
                            "optional": false,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Current id state as a string"
                        },
                        {
                            "name": "d_activeIndex",
                            "optional": false,
                            "readonly": false,
                            "type": "number | number[]",
                            "default": "",
                            "description": "Current active index state."
                        }
                    ],
                    "methods": []
                },
                "AccordionProps": {
                    "description": "Defines valid properties in Accordion component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "multiple",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, multiple tabs can be activated at the same time."
                        },
                        {
                            "name": "activeIndex",
                            "optional": true,
                            "readonly": false,
                            "type": "null | number | number[]",
                            "default": "null",
                            "description": "Index of the active tab or an array of indexes in multiple mode."
                        },
                        {
                            "name": "lazy",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, hidden tabs are not rendered at all. Defaults to false that hides tabs with css."
                        },
                        {
                            "name": "expandIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of a collapsed tab."
                        },
                        {
                            "name": "collapseIcon",
                            "optional": true,
                            "readonly": false,
                            "type": "string",
                            "default": "",
                            "description": "Icon of an expanded tab."
                        },
                        {
                            "name": "tabindex",
                            "optional": true,
                            "readonly": false,
                            "type": "number",
                            "default": "0",
                            "description": "Index of the element in tabbing order."
                        },
                        {
                            "name": "selectOnFocus",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, the focused tab is activated."
                        },
                        {
                            "name": "pt",
                            "optional": true,
                            "readonly": false,
                            "type": "AccordionPassThroughOptions",
                            "default": "",
                            "description": "Uses to pass attributes to DOM elements inside the component."
                        },
                        {
                            "name": "unstyled",
                            "optional": true,
                            "readonly": false,
                            "type": "boolean",
                            "default": "false",
                            "description": "When enabled, it removes component related styles in the core."
                        }
                    ],
                    "methods": []
                },
                "AccordionSlots": {
                    "description": "Defines valid slots in Accordion slots.",
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "default",
                            "parameters": [],
                            "returnType": "VNode<RendererNode, RendererElement, Object>[]",
                            "description": "Default slot to detect AccordionTab components."
                        }
                    ]
                },
                "AccordionEmits": {
                    "description": "Defines valid emits in Accordion component.",
                    "relatedProp": "",
                    "props": [],
                    "methods": [
                        {
                            "name": "update:activeIndex",
                            "parameters": [
                                {
                                    "name": "value",
                                    "optional": false,
                                    "type": "undefined | number",
                                    "description": "Index of new active tab."
                                }
                            ],
                            "returnType": "void",
                            "description": "Emitted when the active tab changes."
                        },
                        {
                            "name": "tab-open",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "AccordionTabOpenEvent",
                                    "description": "Custom tab open event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when a tab gets expanded."
                        },
                        {
                            "name": "tab-close",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "AccordionTabCloseEvent",
                                    "description": "Custom tab close event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when an active tab is collapsed by clicking on the header."
                        },
                        {
                            "name": "tab-click",
                            "parameters": [
                                {
                                    "name": "event",
                                    "optional": false,
                                    "type": "AccordionClickEvent",
                                    "description": "Custom tab click event."
                                }
                            ],
                            "returnType": "void",
                            "description": "Callback to invoke when an active tab is clicked."
                        }
                    ]
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "AccordionPassThroughOptionType": {
                    "values": "AccordionPassThroughAttributes | (options: AccordionPassThroughMethodOptions) => undefined | string | null | undefined"
                }
            }
        }
    },
    "form": {
        "description": "Accordion groups a collection of contents in tabs.\n\n[Live Demo](https://www.primevue.org/accordion/)",
        "interfaces": {
            "description": "Defines the custom interfaces used by the module.",
            "eventDescription": "Defines the custom events used by the component's emit.",
            "methodDescription": "Defines methods that can be accessed by the component's reference.",
            "typeDescription": "Defines the custom types used by the module.",
            "values": {
                "formProps": {
                    "description": "Defines valid properties in Accordion component.",
                    "relatedProp": "",
                    "props": [
                        {
                            "name": "sections",
                            "optional": false,
                            "readonly": false,
                            "type": "FormSeciton[]",
                            "default": "",
                            "description": "each section will have array of inputs as value and section title as key"
                        },
                        {
                            "name": "options",
                            "type": "FormOptions",
                            "default": "",
                            "description": "options to control how the form will look"
                        },
                        {
                            "name": "submitHandler",
                            "type": "SubmitHandler<any, any, any>",
                            "default": "",
                            "description": "this used on submitting the form"
                        },
                        {
                            "name": "toastHandler",
                            "type": "ToastHandler",
                            "default": "",
                            "description": "this used wo show certain success message after success"
                        }
                    ],
                    "methods": []
                }
            }
        },
        "types": {
            "description": "Defines the custom types used by the module.",
            "values": {
                "FormKitSchemaDOMNode": {
                    "values": " $el: string | null; attrs?: FormKitSchemaAttributes;"
                },
                "FormKitSchemaNode": {
                    "values": "FormKitSchemaDOMNode | FormKitSchemaComponent | FormKitSchemaTextNode | FormKitSchemaCondition | FormKitSchemaFormKit;>"
                },
                "FormSeciton": {
                    "values": "Record<string, FormKitSchemaNode[]>"
                }
            }
        }
    }
}